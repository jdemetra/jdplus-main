// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tramoseats.proto
// Protobuf Java Version: 4.30.2

package jdplus.tramoseats.base.protobuf;

/**
 * Protobuf type {@code tramoseats.DecompositionSpec}
 */
public final class DecompositionSpec extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:tramoseats.DecompositionSpec)
    DecompositionSpecOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 30,
      /* patch= */ 2,
      /* suffix= */ "",
      DecompositionSpec.class.getName());
  }
  // Use DecompositionSpec.newBuilder() to construct.
  private DecompositionSpec(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private DecompositionSpec() {
    approximation_ = 0;
    algorithm_ = 0;
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return jdplus.tramoseats.base.protobuf.TramoSeatsProtos.internal_static_tramoseats_DecompositionSpec_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return jdplus.tramoseats.base.protobuf.TramoSeatsProtos.internal_static_tramoseats_DecompositionSpec_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            jdplus.tramoseats.base.protobuf.DecompositionSpec.class, jdplus.tramoseats.base.protobuf.DecompositionSpec.Builder.class);
  }

  public static final int XL_BOUNDARY_FIELD_NUMBER = 1;
  private double xlBoundary_ = 0D;
  /**
   * <code>double xl_boundary = 1;</code>
   * @return The xlBoundary.
   */
  @java.lang.Override
  public double getXlBoundary() {
    return xlBoundary_;
  }

  public static final int APPROXIMATION_FIELD_NUMBER = 2;
  private int approximation_ = 0;
  /**
   * <code>.tramoseats.SeatsApproximation approximation = 2;</code>
   * @return The enum numeric value on the wire for approximation.
   */
  @java.lang.Override public int getApproximationValue() {
    return approximation_;
  }
  /**
   * <code>.tramoseats.SeatsApproximation approximation = 2;</code>
   * @return The approximation.
   */
  @java.lang.Override public jdplus.tramoseats.base.protobuf.SeatsApproximation getApproximation() {
    jdplus.tramoseats.base.protobuf.SeatsApproximation result = jdplus.tramoseats.base.protobuf.SeatsApproximation.forNumber(approximation_);
    return result == null ? jdplus.tramoseats.base.protobuf.SeatsApproximation.UNRECOGNIZED : result;
  }

  public static final int SEASTOLERANCE_FIELD_NUMBER = 3;
  private double seastolerance_ = 0D;
  /**
   * <code>double seastolerance = 3;</code>
   * @return The seastolerance.
   */
  @java.lang.Override
  public double getSeastolerance() {
    return seastolerance_;
  }

  public static final int TREND_BOUNDARY_FIELD_NUMBER = 4;
  private double trendBoundary_ = 0D;
  /**
   * <code>double trend_boundary = 4;</code>
   * @return The trendBoundary.
   */
  @java.lang.Override
  public double getTrendBoundary() {
    return trendBoundary_;
  }

  public static final int SEAS_BOUNDARY_FIELD_NUMBER = 5;
  private double seasBoundary_ = 0D;
  /**
   * <code>double seas_boundary = 5;</code>
   * @return The seasBoundary.
   */
  @java.lang.Override
  public double getSeasBoundary() {
    return seasBoundary_;
  }

  public static final int SEAS_BOUNDARY_AT_PI_FIELD_NUMBER = 6;
  private double seasBoundaryAtPi_ = 0D;
  /**
   * <code>double seas_boundary_at_pi = 6;</code>
   * @return The seasBoundaryAtPi.
   */
  @java.lang.Override
  public double getSeasBoundaryAtPi() {
    return seasBoundaryAtPi_;
  }

  public static final int BIAS_CORRECTION_FIELD_NUMBER = 7;
  private boolean biasCorrection_ = false;
  /**
   * <code>bool bias_correction = 7;</code>
   * @return The biasCorrection.
   */
  @java.lang.Override
  public boolean getBiasCorrection() {
    return biasCorrection_;
  }

  public static final int NFCASTS_FIELD_NUMBER = 8;
  private int nfcasts_ = 0;
  /**
   * <code>int32 nfcasts = 8;</code>
   * @return The nfcasts.
   */
  @java.lang.Override
  public int getNfcasts() {
    return nfcasts_;
  }

  public static final int NBCASTS_FIELD_NUMBER = 9;
  private int nbcasts_ = 0;
  /**
   * <code>int32 nbcasts = 9;</code>
   * @return The nbcasts.
   */
  @java.lang.Override
  public int getNbcasts() {
    return nbcasts_;
  }

  public static final int ALGORITHM_FIELD_NUMBER = 10;
  private int algorithm_ = 0;
  /**
   * <code>.tramoseats.SeatsAlgorithm algorithm = 10;</code>
   * @return The enum numeric value on the wire for algorithm.
   */
  @java.lang.Override public int getAlgorithmValue() {
    return algorithm_;
  }
  /**
   * <code>.tramoseats.SeatsAlgorithm algorithm = 10;</code>
   * @return The algorithm.
   */
  @java.lang.Override public jdplus.tramoseats.base.protobuf.SeatsAlgorithm getAlgorithm() {
    jdplus.tramoseats.base.protobuf.SeatsAlgorithm result = jdplus.tramoseats.base.protobuf.SeatsAlgorithm.forNumber(algorithm_);
    return result == null ? jdplus.tramoseats.base.protobuf.SeatsAlgorithm.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (java.lang.Double.doubleToRawLongBits(xlBoundary_) != 0) {
      output.writeDouble(1, xlBoundary_);
    }
    if (approximation_ != jdplus.tramoseats.base.protobuf.SeatsApproximation.SEATS_APP_NONE.getNumber()) {
      output.writeEnum(2, approximation_);
    }
    if (java.lang.Double.doubleToRawLongBits(seastolerance_) != 0) {
      output.writeDouble(3, seastolerance_);
    }
    if (java.lang.Double.doubleToRawLongBits(trendBoundary_) != 0) {
      output.writeDouble(4, trendBoundary_);
    }
    if (java.lang.Double.doubleToRawLongBits(seasBoundary_) != 0) {
      output.writeDouble(5, seasBoundary_);
    }
    if (java.lang.Double.doubleToRawLongBits(seasBoundaryAtPi_) != 0) {
      output.writeDouble(6, seasBoundaryAtPi_);
    }
    if (biasCorrection_ != false) {
      output.writeBool(7, biasCorrection_);
    }
    if (nfcasts_ != 0) {
      output.writeInt32(8, nfcasts_);
    }
    if (nbcasts_ != 0) {
      output.writeInt32(9, nbcasts_);
    }
    if (algorithm_ != jdplus.tramoseats.base.protobuf.SeatsAlgorithm.SEATS_ALG_BURMAN.getNumber()) {
      output.writeEnum(10, algorithm_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (java.lang.Double.doubleToRawLongBits(xlBoundary_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(1, xlBoundary_);
    }
    if (approximation_ != jdplus.tramoseats.base.protobuf.SeatsApproximation.SEATS_APP_NONE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, approximation_);
    }
    if (java.lang.Double.doubleToRawLongBits(seastolerance_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, seastolerance_);
    }
    if (java.lang.Double.doubleToRawLongBits(trendBoundary_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(4, trendBoundary_);
    }
    if (java.lang.Double.doubleToRawLongBits(seasBoundary_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(5, seasBoundary_);
    }
    if (java.lang.Double.doubleToRawLongBits(seasBoundaryAtPi_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(6, seasBoundaryAtPi_);
    }
    if (biasCorrection_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, biasCorrection_);
    }
    if (nfcasts_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, nfcasts_);
    }
    if (nbcasts_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, nbcasts_);
    }
    if (algorithm_ != jdplus.tramoseats.base.protobuf.SeatsAlgorithm.SEATS_ALG_BURMAN.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(10, algorithm_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof jdplus.tramoseats.base.protobuf.DecompositionSpec)) {
      return super.equals(obj);
    }
    jdplus.tramoseats.base.protobuf.DecompositionSpec other = (jdplus.tramoseats.base.protobuf.DecompositionSpec) obj;

    if (java.lang.Double.doubleToLongBits(getXlBoundary())
        != java.lang.Double.doubleToLongBits(
            other.getXlBoundary())) return false;
    if (approximation_ != other.approximation_) return false;
    if (java.lang.Double.doubleToLongBits(getSeastolerance())
        != java.lang.Double.doubleToLongBits(
            other.getSeastolerance())) return false;
    if (java.lang.Double.doubleToLongBits(getTrendBoundary())
        != java.lang.Double.doubleToLongBits(
            other.getTrendBoundary())) return false;
    if (java.lang.Double.doubleToLongBits(getSeasBoundary())
        != java.lang.Double.doubleToLongBits(
            other.getSeasBoundary())) return false;
    if (java.lang.Double.doubleToLongBits(getSeasBoundaryAtPi())
        != java.lang.Double.doubleToLongBits(
            other.getSeasBoundaryAtPi())) return false;
    if (getBiasCorrection()
        != other.getBiasCorrection()) return false;
    if (getNfcasts()
        != other.getNfcasts()) return false;
    if (getNbcasts()
        != other.getNbcasts()) return false;
    if (algorithm_ != other.algorithm_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + XL_BOUNDARY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getXlBoundary()));
    hash = (37 * hash) + APPROXIMATION_FIELD_NUMBER;
    hash = (53 * hash) + approximation_;
    hash = (37 * hash) + SEASTOLERANCE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getSeastolerance()));
    hash = (37 * hash) + TREND_BOUNDARY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getTrendBoundary()));
    hash = (37 * hash) + SEAS_BOUNDARY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getSeasBoundary()));
    hash = (37 * hash) + SEAS_BOUNDARY_AT_PI_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getSeasBoundaryAtPi()));
    hash = (37 * hash) + BIAS_CORRECTION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getBiasCorrection());
    hash = (37 * hash) + NFCASTS_FIELD_NUMBER;
    hash = (53 * hash) + getNfcasts();
    hash = (37 * hash) + NBCASTS_FIELD_NUMBER;
    hash = (53 * hash) + getNbcasts();
    hash = (37 * hash) + ALGORITHM_FIELD_NUMBER;
    hash = (53 * hash) + algorithm_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static jdplus.tramoseats.base.protobuf.DecompositionSpec parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static jdplus.tramoseats.base.protobuf.DecompositionSpec parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static jdplus.tramoseats.base.protobuf.DecompositionSpec parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static jdplus.tramoseats.base.protobuf.DecompositionSpec parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static jdplus.tramoseats.base.protobuf.DecompositionSpec parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static jdplus.tramoseats.base.protobuf.DecompositionSpec parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static jdplus.tramoseats.base.protobuf.DecompositionSpec parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static jdplus.tramoseats.base.protobuf.DecompositionSpec parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static jdplus.tramoseats.base.protobuf.DecompositionSpec parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static jdplus.tramoseats.base.protobuf.DecompositionSpec parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static jdplus.tramoseats.base.protobuf.DecompositionSpec parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static jdplus.tramoseats.base.protobuf.DecompositionSpec parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(jdplus.tramoseats.base.protobuf.DecompositionSpec prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code tramoseats.DecompositionSpec}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tramoseats.DecompositionSpec)
      jdplus.tramoseats.base.protobuf.DecompositionSpecOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return jdplus.tramoseats.base.protobuf.TramoSeatsProtos.internal_static_tramoseats_DecompositionSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return jdplus.tramoseats.base.protobuf.TramoSeatsProtos.internal_static_tramoseats_DecompositionSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              jdplus.tramoseats.base.protobuf.DecompositionSpec.class, jdplus.tramoseats.base.protobuf.DecompositionSpec.Builder.class);
    }

    // Construct using jdplus.tramoseats.base.protobuf.DecompositionSpec.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      xlBoundary_ = 0D;
      approximation_ = 0;
      seastolerance_ = 0D;
      trendBoundary_ = 0D;
      seasBoundary_ = 0D;
      seasBoundaryAtPi_ = 0D;
      biasCorrection_ = false;
      nfcasts_ = 0;
      nbcasts_ = 0;
      algorithm_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return jdplus.tramoseats.base.protobuf.TramoSeatsProtos.internal_static_tramoseats_DecompositionSpec_descriptor;
    }

    @java.lang.Override
    public jdplus.tramoseats.base.protobuf.DecompositionSpec getDefaultInstanceForType() {
      return jdplus.tramoseats.base.protobuf.DecompositionSpec.getDefaultInstance();
    }

    @java.lang.Override
    public jdplus.tramoseats.base.protobuf.DecompositionSpec build() {
      jdplus.tramoseats.base.protobuf.DecompositionSpec result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public jdplus.tramoseats.base.protobuf.DecompositionSpec buildPartial() {
      jdplus.tramoseats.base.protobuf.DecompositionSpec result = new jdplus.tramoseats.base.protobuf.DecompositionSpec(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(jdplus.tramoseats.base.protobuf.DecompositionSpec result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.xlBoundary_ = xlBoundary_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.approximation_ = approximation_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.seastolerance_ = seastolerance_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.trendBoundary_ = trendBoundary_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.seasBoundary_ = seasBoundary_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.seasBoundaryAtPi_ = seasBoundaryAtPi_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.biasCorrection_ = biasCorrection_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.nfcasts_ = nfcasts_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.nbcasts_ = nbcasts_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.algorithm_ = algorithm_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof jdplus.tramoseats.base.protobuf.DecompositionSpec) {
        return mergeFrom((jdplus.tramoseats.base.protobuf.DecompositionSpec)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(jdplus.tramoseats.base.protobuf.DecompositionSpec other) {
      if (other == jdplus.tramoseats.base.protobuf.DecompositionSpec.getDefaultInstance()) return this;
      if (java.lang.Double.doubleToRawLongBits(other.getXlBoundary()) != 0) {
        setXlBoundary(other.getXlBoundary());
      }
      if (other.approximation_ != 0) {
        setApproximationValue(other.getApproximationValue());
      }
      if (java.lang.Double.doubleToRawLongBits(other.getSeastolerance()) != 0) {
        setSeastolerance(other.getSeastolerance());
      }
      if (java.lang.Double.doubleToRawLongBits(other.getTrendBoundary()) != 0) {
        setTrendBoundary(other.getTrendBoundary());
      }
      if (java.lang.Double.doubleToRawLongBits(other.getSeasBoundary()) != 0) {
        setSeasBoundary(other.getSeasBoundary());
      }
      if (java.lang.Double.doubleToRawLongBits(other.getSeasBoundaryAtPi()) != 0) {
        setSeasBoundaryAtPi(other.getSeasBoundaryAtPi());
      }
      if (other.getBiasCorrection() != false) {
        setBiasCorrection(other.getBiasCorrection());
      }
      if (other.getNfcasts() != 0) {
        setNfcasts(other.getNfcasts());
      }
      if (other.getNbcasts() != 0) {
        setNbcasts(other.getNbcasts());
      }
      if (other.algorithm_ != 0) {
        setAlgorithmValue(other.getAlgorithmValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {
              xlBoundary_ = input.readDouble();
              bitField0_ |= 0x00000001;
              break;
            } // case 9
            case 16: {
              approximation_ = input.readEnum();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 25: {
              seastolerance_ = input.readDouble();
              bitField0_ |= 0x00000004;
              break;
            } // case 25
            case 33: {
              trendBoundary_ = input.readDouble();
              bitField0_ |= 0x00000008;
              break;
            } // case 33
            case 41: {
              seasBoundary_ = input.readDouble();
              bitField0_ |= 0x00000010;
              break;
            } // case 41
            case 49: {
              seasBoundaryAtPi_ = input.readDouble();
              bitField0_ |= 0x00000020;
              break;
            } // case 49
            case 56: {
              biasCorrection_ = input.readBool();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              nfcasts_ = input.readInt32();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 72: {
              nbcasts_ = input.readInt32();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            case 80: {
              algorithm_ = input.readEnum();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private double xlBoundary_ ;
    /**
     * <code>double xl_boundary = 1;</code>
     * @return The xlBoundary.
     */
    @java.lang.Override
    public double getXlBoundary() {
      return xlBoundary_;
    }
    /**
     * <code>double xl_boundary = 1;</code>
     * @param value The xlBoundary to set.
     * @return This builder for chaining.
     */
    public Builder setXlBoundary(double value) {

      xlBoundary_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>double xl_boundary = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearXlBoundary() {
      bitField0_ = (bitField0_ & ~0x00000001);
      xlBoundary_ = 0D;
      onChanged();
      return this;
    }

    private int approximation_ = 0;
    /**
     * <code>.tramoseats.SeatsApproximation approximation = 2;</code>
     * @return The enum numeric value on the wire for approximation.
     */
    @java.lang.Override public int getApproximationValue() {
      return approximation_;
    }
    /**
     * <code>.tramoseats.SeatsApproximation approximation = 2;</code>
     * @param value The enum numeric value on the wire for approximation to set.
     * @return This builder for chaining.
     */
    public Builder setApproximationValue(int value) {
      approximation_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>.tramoseats.SeatsApproximation approximation = 2;</code>
     * @return The approximation.
     */
    @java.lang.Override
    public jdplus.tramoseats.base.protobuf.SeatsApproximation getApproximation() {
      jdplus.tramoseats.base.protobuf.SeatsApproximation result = jdplus.tramoseats.base.protobuf.SeatsApproximation.forNumber(approximation_);
      return result == null ? jdplus.tramoseats.base.protobuf.SeatsApproximation.UNRECOGNIZED : result;
    }
    /**
     * <code>.tramoseats.SeatsApproximation approximation = 2;</code>
     * @param value The approximation to set.
     * @return This builder for chaining.
     */
    public Builder setApproximation(jdplus.tramoseats.base.protobuf.SeatsApproximation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      approximation_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.tramoseats.SeatsApproximation approximation = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearApproximation() {
      bitField0_ = (bitField0_ & ~0x00000002);
      approximation_ = 0;
      onChanged();
      return this;
    }

    private double seastolerance_ ;
    /**
     * <code>double seastolerance = 3;</code>
     * @return The seastolerance.
     */
    @java.lang.Override
    public double getSeastolerance() {
      return seastolerance_;
    }
    /**
     * <code>double seastolerance = 3;</code>
     * @param value The seastolerance to set.
     * @return This builder for chaining.
     */
    public Builder setSeastolerance(double value) {

      seastolerance_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>double seastolerance = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearSeastolerance() {
      bitField0_ = (bitField0_ & ~0x00000004);
      seastolerance_ = 0D;
      onChanged();
      return this;
    }

    private double trendBoundary_ ;
    /**
     * <code>double trend_boundary = 4;</code>
     * @return The trendBoundary.
     */
    @java.lang.Override
    public double getTrendBoundary() {
      return trendBoundary_;
    }
    /**
     * <code>double trend_boundary = 4;</code>
     * @param value The trendBoundary to set.
     * @return This builder for chaining.
     */
    public Builder setTrendBoundary(double value) {

      trendBoundary_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>double trend_boundary = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTrendBoundary() {
      bitField0_ = (bitField0_ & ~0x00000008);
      trendBoundary_ = 0D;
      onChanged();
      return this;
    }

    private double seasBoundary_ ;
    /**
     * <code>double seas_boundary = 5;</code>
     * @return The seasBoundary.
     */
    @java.lang.Override
    public double getSeasBoundary() {
      return seasBoundary_;
    }
    /**
     * <code>double seas_boundary = 5;</code>
     * @param value The seasBoundary to set.
     * @return This builder for chaining.
     */
    public Builder setSeasBoundary(double value) {

      seasBoundary_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>double seas_boundary = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearSeasBoundary() {
      bitField0_ = (bitField0_ & ~0x00000010);
      seasBoundary_ = 0D;
      onChanged();
      return this;
    }

    private double seasBoundaryAtPi_ ;
    /**
     * <code>double seas_boundary_at_pi = 6;</code>
     * @return The seasBoundaryAtPi.
     */
    @java.lang.Override
    public double getSeasBoundaryAtPi() {
      return seasBoundaryAtPi_;
    }
    /**
     * <code>double seas_boundary_at_pi = 6;</code>
     * @param value The seasBoundaryAtPi to set.
     * @return This builder for chaining.
     */
    public Builder setSeasBoundaryAtPi(double value) {

      seasBoundaryAtPi_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>double seas_boundary_at_pi = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearSeasBoundaryAtPi() {
      bitField0_ = (bitField0_ & ~0x00000020);
      seasBoundaryAtPi_ = 0D;
      onChanged();
      return this;
    }

    private boolean biasCorrection_ ;
    /**
     * <code>bool bias_correction = 7;</code>
     * @return The biasCorrection.
     */
    @java.lang.Override
    public boolean getBiasCorrection() {
      return biasCorrection_;
    }
    /**
     * <code>bool bias_correction = 7;</code>
     * @param value The biasCorrection to set.
     * @return This builder for chaining.
     */
    public Builder setBiasCorrection(boolean value) {

      biasCorrection_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>bool bias_correction = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearBiasCorrection() {
      bitField0_ = (bitField0_ & ~0x00000040);
      biasCorrection_ = false;
      onChanged();
      return this;
    }

    private int nfcasts_ ;
    /**
     * <code>int32 nfcasts = 8;</code>
     * @return The nfcasts.
     */
    @java.lang.Override
    public int getNfcasts() {
      return nfcasts_;
    }
    /**
     * <code>int32 nfcasts = 8;</code>
     * @param value The nfcasts to set.
     * @return This builder for chaining.
     */
    public Builder setNfcasts(int value) {

      nfcasts_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>int32 nfcasts = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearNfcasts() {
      bitField0_ = (bitField0_ & ~0x00000080);
      nfcasts_ = 0;
      onChanged();
      return this;
    }

    private int nbcasts_ ;
    /**
     * <code>int32 nbcasts = 9;</code>
     * @return The nbcasts.
     */
    @java.lang.Override
    public int getNbcasts() {
      return nbcasts_;
    }
    /**
     * <code>int32 nbcasts = 9;</code>
     * @param value The nbcasts to set.
     * @return This builder for chaining.
     */
    public Builder setNbcasts(int value) {

      nbcasts_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <code>int32 nbcasts = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearNbcasts() {
      bitField0_ = (bitField0_ & ~0x00000100);
      nbcasts_ = 0;
      onChanged();
      return this;
    }

    private int algorithm_ = 0;
    /**
     * <code>.tramoseats.SeatsAlgorithm algorithm = 10;</code>
     * @return The enum numeric value on the wire for algorithm.
     */
    @java.lang.Override public int getAlgorithmValue() {
      return algorithm_;
    }
    /**
     * <code>.tramoseats.SeatsAlgorithm algorithm = 10;</code>
     * @param value The enum numeric value on the wire for algorithm to set.
     * @return This builder for chaining.
     */
    public Builder setAlgorithmValue(int value) {
      algorithm_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <code>.tramoseats.SeatsAlgorithm algorithm = 10;</code>
     * @return The algorithm.
     */
    @java.lang.Override
    public jdplus.tramoseats.base.protobuf.SeatsAlgorithm getAlgorithm() {
      jdplus.tramoseats.base.protobuf.SeatsAlgorithm result = jdplus.tramoseats.base.protobuf.SeatsAlgorithm.forNumber(algorithm_);
      return result == null ? jdplus.tramoseats.base.protobuf.SeatsAlgorithm.UNRECOGNIZED : result;
    }
    /**
     * <code>.tramoseats.SeatsAlgorithm algorithm = 10;</code>
     * @param value The algorithm to set.
     * @return This builder for chaining.
     */
    public Builder setAlgorithm(jdplus.tramoseats.base.protobuf.SeatsAlgorithm value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000200;
      algorithm_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.tramoseats.SeatsAlgorithm algorithm = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearAlgorithm() {
      bitField0_ = (bitField0_ & ~0x00000200);
      algorithm_ = 0;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:tramoseats.DecompositionSpec)
  }

  // @@protoc_insertion_point(class_scope:tramoseats.DecompositionSpec)
  private static final jdplus.tramoseats.base.protobuf.DecompositionSpec DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new jdplus.tramoseats.base.protobuf.DecompositionSpec();
  }

  public static jdplus.tramoseats.base.protobuf.DecompositionSpec getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DecompositionSpec>
      PARSER = new com.google.protobuf.AbstractParser<DecompositionSpec>() {
    @java.lang.Override
    public DecompositionSpec parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DecompositionSpec> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DecompositionSpec> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public jdplus.tramoseats.base.protobuf.DecompositionSpec getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

